<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<!-- 
	Flowplayer website, forums & jQuery Tools by Tero Piirainen 
	
	Prefer web standards over Flash. Video is the only exception.	
-->

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>

		<title>Flowplayer - Flash Video Player for the Web</title>
		<meta name="Description" content="Embed video streams to your website. Superior alternative to YouTube. Open Sourced under the GPL license. No other software makes this smoother." />	
		<meta name="Keywords" content="video player for the web, flash video player,web media player,free video player,free flv player,mp4 flash player,mp4 player,open source video player,flash 9 video,flash video,web video,flv player,flv video" />		
	

	
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<meta name="Distribution" content="Global" />
	<meta name="Author" content="Tero Piirainen" />
	<meta name="Robots" content="index,follow" /> 
 
		
	<link rel="stylesheet" type="text/css" href="http://static.flowplayer.org/css/global-0.25.css" />
	
	<link rel="stylesheet" type="text/css" href="bwcheck.css" />
	<script type="text/javascript" src="http://static.flowplayer.org/js/flowplayer-3.2.4.min.js"></script>	
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
	<script type="text/javascript"  src="http://cdn.jquerytools.org/1.2.4/full/jquery.tools.min.js"></script>
	<script type="text/javascript"  src="global-0.50.js"></script>	
	<script type="text/javascript" src="flowplayer.bwcheck-3.2.js"></script>
	<link rel="stylesheet" type="text/css" href="http://static.flowplayer.org/tools/css/overlay-apple.css"/>
	<script type="text/javascript"  src="http://flowplayer.org/tools/download/1.2.4/overlay/overlay.apple.min.js"></script>	
	 
	
	
	
	<style type="text/css">
		div.overlay {
		width:1024px; 
		height:432px;

		}
		
		
	</style>
	

	<!--[if lt IE 7]>
		<style type="text/css">
			@import "http://static.flowplayer.org/css/ie6.css?v=0.2";
		</style>
	<![endif]-->
	
	<!--[if lt IE 8]>
		<style>
			html { overflow-x:hidden; }
			#content ol, #content ul  {margin-left: 50px; }
		</style>
	<![endif]-->	

</head>

<body id="plugins_bwcheck">




	
	<div id="wrap">			 
	<script type="text/javascript" >

$(function() {		
		
	// positions for each overlay

		
	// setup triggers
	$("button[rel]").each(function(i) {
			
		$(this).overlay({

			// common configuration for each overlay
			oneInstance: false, 
			closeOnClick: false, 
			 

			// use apple effect
			effect: 'apple'
			
		});			
	});
	
});
</script>

<script type="text/javascript">

// common methods and configs

function switchStreamInfo(mappedBitrate, streamName, oldStreamName) {
	var content = $f().getPlugin('content');
	
	var info = "Chosen bitrate is: " + mappedBitrate.bitrate + "<br /> Video file served: " + streamName + "<br /> Old Video file served: " + oldStreamName;
	content.setHtml(info);
}

function bwDoneInfo(mappedBitrate, detectedBitrate) {
	var content = $f().getPlugin('content');
	var info = "Your speed is: " + detectedBitrate + "<br /> Your chosen bitrate: " + mappedBitrate.bitrate + "<br /> Video file served: " + mappedBitrate.url;
	content.setHtml(info);
}

var httpPlaylist =  [
			            {
			              url: "bbb.flv", 
			              bitrates: [
			              			{url: "bbb_160x90.flv", width: 160, height: 90, bitrate: 100},
			              			{url: "bbb_320x180.flv", width: 320, height: 180, bitrate: 180},
			              			{url: "bbb_480x270.flv", width: 480, height: 270, bitrate: 270},
			              			{url: "bbb_640x360.flv", width: 640, height: 360, bitrate: 360}
			              		    ]
			            }
        			];
        			
        			

var psuedoPlaylist =  [
			            {
			              url: "bbb.flv", 
			              bitrates: [
			              			{url: "bbb_160x90.flv", width: 160, height: 90, bitrate: 100, label: "100k"},
			              			{url: "bbb_320x180.flv", width: 320, height: 180, bitrate: 180, label: "180k"},
			              			{url: "bbb_480x270.flv", width: 480, height: 270, bitrate: 270, label: "270k"},
			              			{url: "bbb_640x360.flv", width: 640, height: 360, bitrate: 360, label: "360k"}
			              		    ]
			            }
        			];
        			
var fmsPlaylist =  [
			            {
			              url: "bbb.flv", 
			              bitrates: [
			              			{url: "flv:bbb_160x90", width: 160, height: 90, bitrate: 100, label: "100k"},
			              			{url: "flv:bbb_320x180", width: 320, height: 180, bitrate: 180, label: "180k"},
			              			{url: "flv:bbb_480x270", width: 480, height: 270, bitrate: 270, label: "270k"},
			              			{url: "flv:bbb_640x360", width: 640, height: 360, bitrate: 360, label: "360k"}
			              		    ]
			            }
        			];
        			
var wowzaPlaylist = [
			            {
			              url: "flv:bbb", 
			
			              bitrates: [
			                        {url: "vod/demo.flowplayer/bbb_160x90", width: 160, height: 90, bitrate: 100, label: "100k"},
			                        {url: "vod/demo.flowplayer/bbb_320x180", width: 320, height: 180, bitrate: 180, label: "180k"},
			                        {url: "vod/demo.flowplayer/bbb_480x270", width: 480, height: 270, bitrate: 270, label: "270k"},
			                        {url: "vod/demo.flowplayer/bbb_640x360", width: 640, height: 360, bitrate: 360, label: "360k", hd:true}
						           ]
						}
			        ]

var testPlaylist = [
			  		   {
			        	url: "flv:bbb",
			   			bitrates: [
								{ url: "mp4:vod/video.tradingwizards/Stalker_40Kbps.mov", width: 214, bitrate: 40 },
								{ url: "mp4:vod/video.tradingwizards/Stalker_100Kbps.mov", width: 214, bitrate: 100 },
								{ 
									url: "mp4:vod/video.tradingwizards/Stalker_300Kbps.mov", width: 214, height: 120, bitrate: 300,
									isDefault: true 
								},
								{ url: "mp4:vod/video.tradingwizards/Stalker_800Kbps.mov", width: 428, bitrate: 800 },
								{ url: "mp4:vod/video.tradingwizards/Stalker_1536Kbps.mov", width: 854, bitrate: 1536 }]
						}
					]
					
var contentPlugin = {
						url: '../flowplayer.content.swf',
						prototype: 'content',
						top: 0,
						left: 0,
						width: 350 
					};

var loggingConfig = { level: 'debug', filter: 'org.flowplayer.rtmp.*, org.flowplayer.bwcheck.*, org.flowplayer.cluster.*,org.flowplayer.rtmp.*, org.flowplayer.controller.*' };

$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		var content = $f().getPlugin('content');
		content.setHtml("Detecting Bandwidth Please Wait ...");
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});

</script>
		
		<div id="content"> 
		
		






<h1 style="background-image:url(http://www.flowplayer.org/img/title/streaminge.png)">
	<strong>Bandwidth</strong> detection
	<em>Selecting the best bitrate based on available bandwidth</em>
</h1>



<h2>Introduction</h2>

<p>
    The Bandwidth Check plugin is used to detect the bandwidth that is available to the player. Based on the result of
    this detection the plugin selects the stream or file that is best suited for the available bandwidth. This way the
    viewing experience of the user is optimal without unnecessary buffering in the middle of the stream. If the user
    has a broadband connection (large bandwidth) he will be served with a HD quality stream and will have a good viewing
    experience, and with slower connection speeds a file with a smaller bitrate will be selected.
</p>
<p>
    Video (and audio) files are encoded with several different bitrates so that good matches are available for the
    connection speeds that are being targeted.
</p>

<p>
	The bandwidth check plugin now incorporates a stream selection stategy rule to determine the right video from the available bandwidth
	while also matching the correct dimensions of the player container. When the player dimensions has changed, ie fullscreen a different video matching those dimensions will be chosen.
	
	Stream switching is now available for http, psuedo, rtmp as non-seamless switching and dynamic stream switching connections for seamless switching support.
	
	Quality of service monitoring is now available for normal rtmp and dynamic stream switching connections.
</p>

<p>
	Javascript plugin to dynamically generate a list of stylable / templatable bitrate selections. 
</p>


<h2>Features</h2>

<ul>
	<li>
		 Support for HTTP, pseudostreaming, and RTMP with Wowza, Red5, and Adobe FMS.
	</li>
	<li>
		 Remembers the detected bandwidth so that it is checked only once for each user.
	</li>
	<li>
		 Dynamic stream switching with Adobe FMS 3 and Wowza Media Server 2. Allows for seamless switching of the bitrate <em>in the middle of viewing the stream</em>.
	</li>
	<li>
		 Manual selection of the bitrate. Users will be able to manually select the bitrate, overriding the detected value.
	</li>
	<li>
		Selection strategy rule system, choosing the right bitrate and the right video matching the player dimensions. 
		This is useful to cancel out playing higher bitrate videos if the player dimensions are smaller than the video saving bandwidth.
		When the player is in fullscreen mode a different video will be chosen to match those dimensions. <br/><br/>
	
		Sometimes this strategy rule system is not suitable ie if the player is resized to suit the dimensions so a secondary resizable 
		strategy is available to choose a video that is under the maximum available width the player can resize to on the page.	
	</li>
	<li>
		Quality of service monitoring is available for both non-dynamic stream switching rtmp connections and dynamic stream switching rtmp connections.
		The quality of service monitor will upgrade / downgrade the stream in realtime. For non-dynamic stream switching rtmp connections the switching
		of the stream happens in realtime but it is not seamless.
	</li>
	<li>
		Ability to not use initial bandwidth checking and use the features of the quality of service monitoring to manage the stream. 
	</li>
	<li>
		Dynamic buffer feature to dynamically calculate a suitable buffer time to suit the available bandwidth.
	</li>
	<li>
		Configuring list of video bitrate options via RSS Yahoo Media Extension support. 
	</li>
	<li>
		 Clustering of hosts. The plugin can be configured with a set of hosts it connects to when checking
		 bandwidth. Failing servers are skipped and a working server is selected.
	</li>
	<li>
		Javascript plugin "bwcheck" to dynamically generate a list of stylable / templatable bitrate selections. 
	</li>	
</ul>

<h2>List Of Examples</h2>

<ul>
	<li><a href="#http">Http Streaming</a></li>
	<li><a href="#rtmp">RTMP Streaming</a></li>
	<li><a href="#psuedo">Psuedo Streaming</a></li>
	<li><a href="#rtmp_selection">RTMP with bitrate selections list.</a></li>
	<li><a href="#rtmp_dynamicswitching">RTMP with dynamic stream switching using Wowza 2</a></li>
	<li><a href="#rtmp_fmsdynamicswitching">RTMP with dynamic stream switching using Flash Media Server 3</a></li>
	<li><a href="#rtmp_nocheck">RTMP with dynamic streaming switching and no initial bandwidth check.</a></li>
	<li><a href="#rtmp_selectionstrategy">RTMP with a custom stream selection strategy making it possible to resize the player.</a></li>
	<li><a href="#rtmp_qosmonitor">RTMP with quality of service monitoring enabled and without dynamic stream switching.</a></li>
	<li><a href="#rtmp_rss">RTMP with RSS Yahoo Media playlist providing a list of bitrates.</a></li>
	<li><a href="#rtmp_dynamicbuffer">RTMP with dynamic buffer length calculation feature.</a></li>
	<li><a href="#rtmp_error">RTMP with bandwidth check error and default bitrate failover.</a></li>
	<li><a href="#clustering">Bandwidth check url clustering config example.</a></li>
	<li><a href="#javascript_plugin">Javascript plugin API.</a></li>
	
</ul>

<h2>Examples</h2>

<a name="http"></a>
<h2><em>HTTP</em> Example</h2>

<p>
    This example demonstrates HTTP-based bandwidth checking:
</p>

<div style="width:425px;margin:30px auto">
   

<!-- player container-->


<a 
	href="http://video.flowplayer.org/skyandice.flv" 
	style="display:block;width:425px;height:300px;" 
	id="player">
	
	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />
	
</a>


<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

flowplayer("player", "@PLAYER_SWF@", {
	playlist: httpPlaylist,
	// configure the required plugin
	plugins:  {
		content: contentPlugin,
		
		// bandwidth check plugin
		bwcheck: {  
			url: '@MAIN_PLAYER_SWF@',   
			netConnectionUrl: 'http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf',
			bitrateProfileName: 'HTTPBitrateProfile',
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}
		
	},
	clip: {
		urlResolvers: 'bwcheck',
		baseUrl: 'http://vod01.netdna.com/vod/demo.flowplayer/'
	},
	log: loggingConfig
	
});
</script>	



</div>

<p>
   This example uses HTTP to detect the bandwidth. It loads a reference file from the URL
    configured with <samp>netConnectionUrl</samp> and calculates the bandwidth based on the download speed and file size.
</p>

<button rel="div.overlay:eq(0)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
function switchStreamInfo(mappedBitrate, streamName, oldStreamName) {
	var content = $f().getPlugin('content');
	
	var info = "Chosen bitrate is: " + mappedBitrate.bitrate + "<br /> Video file served: " + streamName + "<br /> Old Video file served: " + oldStreamName;
	content.setHtml(info);
}

function bwDoneInfo(mappedBitrate, detectedBitrate) {
	var content = $f().getPlugin('content');
	var info = "Your speed is: " + detectedBitrate + "<br /> Your chosen bitrate: " + mappedBitrate.bitrate + "<br /> Video file served: " + mappedBitrate.url;
	content.setHtml(info);
}

var httpPlaylist =  [
			            {
			              url: "bbb.flv", 
			              bitrates: [
			              			{url: "bbb_160x90.flv", width: 160, height: 90, bitrate: 100, label: "100k"},
			              			{url: "bbb_320x180.flv", width: 320, height: 180, bitrate: 180, label: "180k"},
			              			{url: "bbb_480x270.flv", width: 480, height: 270, bitrate: 270, label: "270k"},
			              			{url: "bbb_640x360.flv", width: 640, height: 360, bitrate: 360, label: "360k"}
			              		    ]
			            }
        			];
        			


var contentPlugin = {
						url: '../flowplayer.content.swf',
						top: 0,
						left: 0,
						width: 250 
					};

var loggingConfig = { level: 'debug', filter: 'org.flowplayer.bwcheck.*, org.flowplayer.cluster.*' };



$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});

flowplayer("player", "@PLAYER_SWF@", {
	playlist: httpPlaylist,
	// configure the required plugin
	plugins:  {
		content: contentPlugin,
		
		// bandwidth check plugin
		bwcheck: {  
			url: '@MAIN_PLAYER_SWF@',   
			netConnectionUrl: 'http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf',
			bitrateProfileName: 'HTTPBitrateProfile',
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}
		
	},
	clip: {
		urlResolvers: 'bwcheck',
		baseUrl: 'http://vod01.netdna.com/vod/demo.flowplayer/'
	},
	log: loggingConfig
	
});
</code>
</pre>
</div>
</div>



<p>
   You need to have different video files for each bitrate you wish to target. This configuration uses the following files and these need to
   all be available on the server:
</p>

<ul>
   <li>bbb_160x90.flv</li>
   <li>bbb_320x180.flv</li>
   <li>bbb_480x270.flv</li>
   <li>bbb_640x360.flv</li>
</ul>

<h2>Configuration</h2>

<p>
 For this plugin to function correctly all clips in a playlist require an object list of available bitrates in a bitrate property to be set on the clip bitrates property config which maps to customProperties.bitrates.
 
 Each bitrate config must have the following properties
</p>
 <ul>
   <li>url</li>
   <li>bitrate</li>
   <li>width</li>
</ul>
<p>
And optional
</p>
 <ul>
   <li>height</li>
   <li>label</li>
</ul>

<p>A text label as the value (label: "300 k") can be configured to be used in conjunction with the bwcheck javascript plugin to provide video bitrate feedback. </p>
 


<p>Example clip config</p>

<pre>
playlist: [
            {
              url: "flv:bbb", 
              bitrates: [
              				{url: "flv:bbb_160x90", width: 160, height: 90, bitrate: 100, label: "100k"},
              				{url: "flv:bbb_320x180", width: 320, height: 180, bitrate: 180, label: "180k"},
              				{url: "flv:bbb_480x270", width: 480, height: 270, bitrate: 270, label: "270k"},
              				{url: "flv:bbb_640x360", width: 640, height: 360, bitrate: 360, label: "360k"}
              			  ]
          
            }
        ],
</pre>

<p>
    Here is a list of the configuration options:
</p>
<table class="listing">
	<thead>
		<tr>
			<th nowrap="nowrap">property / datatype</th>
			<th>default</th>
			<th>description</th>
		</tr>
	</thead>

    <tr>
        <td class="code">checkOnStart <div class="type">boolean</div></td>
        <td class="code default">true</td>
        <td class="description">
            If <samp>true</samp> (the default) the plugin checks the bandwidth for every clip once their playback starts <em>even when the clips don't specify this plugin as their <samp>urlResolver</samp>.</em> Specify <samp>false</samp> here if you have clips in the playlist for which the bandwidth should not be checked.
        </td>
    </tr>
    <tr>
        <td class="code">netConnectionUrl <div class="type">string</div></td>
        <td class="code default"></td>
        <td class="description">
            The URL used to check the bandwidth. For HTTP-based checking this should point to a reference file that is
            loaded as part of the check. The file should reside on the same host as the plugin, or requires domain context policies for remote loading of the file to prevent sandbox issues. 
            For RTMP this should be a RMTP url pointing to a streaming server.
        </td>
    </tr>
    <tr>
        <td class="code">serverType <div class="type">string</div></td>
        <td class="code default">http</td>
        <td class="description">
				Identifies the type of server that we will be checking against. Available values are 'http', 'red5', 'wowza', and 'fms'.
        </td>
    </tr>
    <tr>
        <td class="code">cacheExpiry <div class="type">number</div>86400</td>
        <td class="code default"></td>
        <td class="description">
        	The expiry time for cached bitrates. The default value is 24 hours (86400 seconds). After the expiry period has passed the bandwidth
        	is re-detected. See also the <a href="#rememberBitrate">rememberBitrate</a> setting.
        </td>
    </tr>
    <tr>
        <td class="code">defaultBitrate <div class="type">int</div></td>
        <td class="code default"></td>
        <td class="description">
            The bitrate used if the detection fails. This should be one of the values contained in the <samp>bitrates</samp> array.
        </td>
    </tr>
    <tr>
        <td class="code"><a name="rememberBitrate"></a>rememberBitrate <div class="type">boolean</div></td>
        <td class="code default">true</td>
        <td class="description">
				Should the detected bandwidth be remembered for the client browser. If <samp>true</samp> the detection is performed only once per domain and stored on the client browser. If <samp>false</samp> the detection is done every time a clip starts playing.
        </td>
    </tr>
    <tr>
        <td class="code">dynamic <div class="type">boolean</div></td>
        <td class="code default">false</td>
        <td class="description">
				Enables dynamic stream switching for Adobe Flash Media Server 3 and Wowza Media Server 2. <a href="#dynamic">See below</a> for more details.
        </td>
    </tr>
    <tr>
        <td class="code">checkOnStart <div class="type">boolean</div></td>
        <td class="code default">true</td>
        <td class="description">
				Explicitly set to check bandwidth on startup if dynamic stream switching is enabled. This allows for initial bandwidth checking on startup for Flash Media Server when dynamic stream switching is enabled.
				This is due to no bandwidth checking support on Wowza Media Server 2.
        </td>
    </tr>
	<tr>
        <td class="code">bitrateProfileName <div class="type">string</div></td>
        <td class="code default">bitrateProfile</td>
        <td class="description">
            The name of the Shared Object where the bitrates is saved. You might want to change this if you have different-
            sets of files and you want to keep the detected bandwidths separate for those sets.
        </td>
    </tr>
    <tr>
        <td class="code">streamSelectionStrategy<div class="type">string</div></td>
        <td class="code default">default</td>
        <td class="description">
        	Possible values: (default, resizable)<br/>
            The strategy to use for the stream selection rule. The default rule will choose a bitrate matching the available bitrate
            while also matching a video that is less than or equal to the player screen size. When the player goes fullscreen the same rule is applied
            but matches the player screen size in fullscreen therefore will choose a higher bitrate if possible.
            <p>
            The resizable selection strategy allows to choose a bitrate and video dimension less than or equal the config setting of maxContainerWidth which is the maximum width the player can be.
            This allows for dynamic resizing of the player container to match the size of the video.
            </p>
            <p>
            Even without resizing, this strategy is possibly a better option if the default rule isn't flexible enough for delivering the best quality stream for the end user.
            </p>
        </td>
    </tr>
    <tr>
        <td class="code">maxContainerWidth<div class="type">int</div></td>
        <td class="code default"></td>
        <td class="description">
        	Used in conjunction with the resizable strategy, sets the maxium width the player can be resized to, or the maximum video width that should be selected when not in fullscreen mode.
        </td>
    </tr>
    <tr>
        <td class="code">dynamicBuffer<div class="type">boolean</div></td>
        <td class="code default">false</td>
        <td class="description">
        	When enabled, this feature will dynamically calculate the best buffer time to suit the available bandwidth.
        </td>
    </tr>
    <tr>
        <td class="code">enableQosMonitor<div class="type">boolean</div></td>
        <td class="code default">false</td>
        <td class="description">
        	When enabled, this feature will enable the quality of service monitor for both non-dynamic rtmp and dynamic rtmp streams. 
        	The quality of service monitor dynamically upgrades / downgrades the stream in realtime. 
        	If using the non-dynamic rtmp stream, the stream switching is possible but not seamless. 
        </td>
    </tr>
</table>

<p>
    Bandwidth checking hosts can be <em>clustered</em> so that you can have many of them available to serve your files. If any of the checks fails, then another host is selected. The following configuration options are related to clustering:
</p>

<table class="listing">
	<thead>
		<tr>
			<th nowrap="nowrap">property / datatype</th>
			<th>default</th>
			<th>description</th>
		</tr>
	</thead>

	 <tr>
		  <td class="code">hosts <div class="type">array</div></td>
		  <td class="code default"></td>
		  <td class="description">
				The hosts that are part of the cluster. These should be base URLs for each host to be used together with the clip's URL.
				The complete URL will be formed by concatenating the host URL and the clip's URL.
		  </td>
	 </tr>
	 <tr>
		  <td class="code">connectTimeout<div class="type">int</div></td>
		  <td class="code default">2000</td>
		  <td class="description">
				Connection timeout for a single connection attempt, given in milliseconds. After this timeout has been
				reached, the connection attempt is considered a failure and the next host in the cluster is evaluated.
		  </td>
	 </tr>
	 <tr>
		  <td class="code">connectCount<div class="type">int</div></td>
		  <td class="code default">3</td>
		  <td class="description">
				Number of times to loop through all the hosts in the cluster before giving up.
		  </td>
	 </tr>
	 <tr>
		  <td class="code">failureExpiry<div class="type">int</div></td>
		  <td class="code default">2000</td>
		  <td class="description">
				The expiry time (in milliseconds) to wait before a failed server is attempted again. The failure timestamp is stored in the
				client browser and a new connection attempt is only attempted after this time has expired.
		  </td>
	 </tr>
	 <tr>
		  <td class="code">loadBalance<div class="type">boolean</div></td>
		  <td class="code default">false</td>
		  <td class="description">
				When this is set to <samp>true</samp> the plugin accesses the configured hosts randomly providing the ability to balance the streaming load more evenly between each host to improve overall performance. If any of the hosts does not work, then another host is chosen.
		  </td>
	 </tr>
</table>



<a name="rtmp"></a>
<h2><em>RTMP</em> Example</h2>

<p>
	The bwcheck plugin supports RTMP servers such as Wowza, Red5 and Adobe FMS. Below is an example:
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

flowplayer("rtmpPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			// Wowza media server bandwidth checking type
			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		start: 150,
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});

</script>



</div>

<p>
     Note that the <samp>serverType</samp>  value that needs to
    be defined for streaming server connecting to, either fms, red5 or wowza.
</p>

<button rel="div.overlay:eq(1)" type="button">Configuration For This Example</button>


<div class="overlay">
<div class="box code">
<pre><code class="javascript">flowplayer("rtmpPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			// Wowza media server bandwidth checking type
			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});</code></pre>
</div>
</div>

<p>
	With the <strong>Wowza</strong> server you need to install the bwcheck app that is bundled in the Wowza distribution. Similarily
	with <strong>Red5</strong> you need to install its bwcheck application that can be installed using Red5's installer. With
	<strong>Adobe FMS</strong> bandwidth checking works without any extra steps.
</p>

<a name="psuedo"></a>
<h2><em>Psuedo Streaming</em> Example</h2>

<p>
	The bwcheck plugin supports dynamic switching with Psuedo Streaming servers such as Lighttpd. The bandwidth check file should reside on the same host as the plugin, or requires domain context policies for remote loading of the file to prevent sandbox issues. Below is an example:
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="psuedoPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>


<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

flowplayer("psuedoPlayer", "@PLAYER_SWF@", {
	playlist: psuedoPlaylist,
	// configure the required plugin
	plugins:  {
		content: contentPlugin,
		psuedo: {
			url: '../flowplayer.pseudostreaming.swf'
		},
		// bandwidth check plugin
		bwcheck: {  
			url: '@MAIN_PLAYER_SWF@',   
			netConnectionUrl: 'http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf',
			bitrateProfileName: 'PseudoBitrateProfile2',
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}
		
	},
	clip: {
		provider: 'psuedo',
		urlResolvers: 'bwcheck',
		start: 150,
		baseUrl: 'http://vod01.netdna.com/vod/demo.flowplayer/pseudo/'
	},
	log: { level: 'debug', filter: 'org.flowplayer.bwcheck.*, org.flowplayer.pseudostreaming.*, org.flowplayer.cluster.*, org.flowplayer.controls.slider.*' }
	
});

</script>	



</div>

<button rel="div.overlay:eq(2)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">flowplayer("psuedoPlayer", "@PLAYER_SWF@", {
	playlist: psuedoPlaylist,
	// configure the required plugin
	plugins:  {
		content: contentPlugin,
		psuedo: {
			url: '../flowplayer.pseudostreaming.swf'
		},
		// bandwidth check plugin
		bwcheck: {  
			url: '@MAIN_PLAYER_SWF@',   
			netConnectionUrl: 'http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf',
			bitrateProfileName: 'PseudoBitrateProfile',
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}
		
	},
	clip: {
		provider: 'psuedo',
		urlResolvers: 'bwcheck',
		baseUrl: 'http://vod01.netdna.com/vod/demo.flowplayer/pseudo/'
	},
	log: { level: 'debug', filter: 'org.flowplayer.bwcheck.*, org.flowplayer.pseudostreaming.*, org.flowplayer.cluster.*' }
	
});</code></pre>
</div>
</div>

<a name="rtmp_selection"></a>
<h2><em>RTMP</em> With Manual Selection Example</h2>

<p>
	RTMP Example with bitrate manual selection.
</p>

<p>
	Demonstrates the functionality of the default stream selection strategy. Regardless of the available bandwidth the player will only choose the bitrate to match the available player dimensions when a bitrate is chosen from the list. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpManualPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

$f("rtmpManualPlayer", "@PLAYER_SWF@", {
	playlist: testPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			//netConnectionUrl: 'rtmp://vod01.netdna.com/play'
			netConnectionUrl: 'rtmp://rtmp01.hddn.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://vod01.netdna.com/play',
			checkOnStart: true,
			//dynamic: true,
			enableQosMonitor: false,
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 640,
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo,
			preferredBufferLength: 8,
			aggressiveModeBufferLength: 8,
			emptyBufferLength: 8,
			droppedFramesTimerDelay: 1000,
			monitorQOSTimerDelay: 1000
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',

		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#changeManualBitrate',{seperator: "<br/>"});


</script>



</div>




<button type="button" class="checkBandwidthBtn">Check Bandwidth</button>


<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>	
<div id="changeManualBitrate" style="display:none;">
	<label><input type="radio" name="bitrateBtn" value="{bitrate}" />{label}</label>
</div>
</div>

	
<button rel="div.overlay:eq(3)" type="button">Configuration For This Example</button>

<div class="overlay">

<div class="box code">

<pre>
<code class="javascript">
$f("rtmpManualPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',

		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#changeManualBitrate',{seperator: "<br/>"});
	
		
$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});
</code>




</pre>

</div>
</div>

<a name="rtmp_dynamicswitching"></a>
<h2><em>RTMP</em> With Dynamic Stream Switching Example</h2>



<h3>Dynamic stream switching</h3>

<p>
    Dynamic stream switching is available in Adobe's FMS 3.5 and Wowza Media Server 2. In dynamic switching the available bandwidth is monitored
    while the stream plays and the stream is switched on-the-fly if the available bandwidth decreases or increases, it will also switch the stream in realtime when a bitrate is manually selected using setBitrate.
    See more information about dynamic stream switching in <a href="http://www.adobe.com/devnet/flashmediaserver/articles/dynamic_stream_switching.html" class="external">Dynamic stream switching with Flash Media Server 3</a>.
</p>

<p>
    If dynamic stream switching is enabled, a bandwidth check at the start is not required, only an initial bitrate with the defaultBitrate can be set 
    and the quality of service monitor will upgrade the stream in realtime. 
</p>
<p>
   In Wowza and Red5 the bandwidth check applications require to be installed as they are not enabled by default. 
</p>

<p>
	Demonstrates the functionality of the default stream selection strategy. Regardless of the available bandwidth the player will only choose the bitrate to match the available player dimensions when a bitrate is chosen from the list. 
</p>

<div style="width:320px;height:205px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:440px;height:353px;"
	id="rtmpDynamicPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" width="320" height="205" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpDynamicPlayer", "@PLAYER_SWF@", {
	playlist: [
	   {provider:"rtmp",autoPlay:true,urlResolvers:"bwcheck", url: "mp4:T1437_400.mp4", bitrates: [{ url: "mp4:T1437_400.mp4", width: 440, height: 330, bitrate: 400,isDefault:true },{ url: "mp4:T1437_700.mp4", width: 440, height: 330, bitrate: 700 },{ url: "mp4:T1437_2000.mp4", width: 440, height: 330, bitrate: 2000 }]}
	   ], 
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://fms.calvaryftl.org/flvplayer/calvary/sanctuary'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'fms',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://fms.calvaryftl.org/flvplayer/calvary/sanctuary',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			rememberBitrate: false,
			checkOnBegin: true, 
			
			//required to enable initial bandwidth checking while als having dynamic switching enabled
			checkOnStart:true, 
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		//start: 150,
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
		
	},
	log: loggingConfig

}).bwcheck('#changeDynamicBitrate',{seperator: "<br/>"});

</script>



</div>


<button type="button" class="checkBandwidthBtn">Check Bandwidth</button>
		
<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>	
<div id="changeDynamicBitrate" style="display:none;">
	<label><input type="radio" name="bitrateBtn" value="{bitrate}" />{label}</label>
</div>
</div>
		
<button rel="div.overlay:eq(4)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpDynamicPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			
			//required to enable initial bandwidth checking while als having dynamic switching enabled
			checkOnStart:true, 
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
		
	},
	log: loggingConfig

}).bwcheck('#changeDynamicBitrate',{seperator: "<br/>"});


		
$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});

</code></pre>
</div>
</div>

<a name="rtmp_fmsdynamicswitching"></a>
<h2><em>RTMP</em> With Dynamic Stream Switching FMS Example</h2>

<p>
	Demonstrates the functionality of the default stream selection strategy. Regardless of the available bandwidth the player will only choose the bitrate to match the available player dimensions when a bitrate is chosen from the list. 
</p>


<h3>Dynamic stream switching FMS Example</h3>


<div style="width:320px;height:205px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:320px;height:205px;"
	id="rtmpDynamicFMSPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" width="320" height="205" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpDynamicFMSPlayer", "@PLAYER_SWF@", {
	playlist: fmsPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://electroteque.org:1937/play'
		},
		content:contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			
			//dynamic: true,
			//checkOnStart:true, 
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#changeDynamicFMSBitrate',{seperator: "<br/>"});

</script>



</div>



<button type="button" class="checkBandwidthBtn">Check Bandwidth</button>

<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>			
<div id="changeDynamicFMSBitrate" style="display:none;">
	<label><input type="radio" name="bitrateBtn" value="{bitrate}" />{label}</label>
</div>		
</div>

<button rel="div.overlay:eq(5)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpDynamicFMSPlayer", "@PLAYER_SWF@", {
	playlist: fmsPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://electroteque.org:1937/play'
		},
		content:contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			
			dynamic: true,
			checkOnStart:true, 
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#changeDynamicFMSBitrate',{seperator: "<br/>"});

$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});

</code></pre>
</div>
</div>

<a name="rtmp_nocheck"></a>
<h2><em>RTMP</em> With Dynamic Stream Switching With No Initial Bandwidth Check Example</h2>



<h3>Dynamic stream switching</h3>

<p>Makes use of the quality of service monitoring enabled for rtmp connections to manage upgrading / downgrading the stream. Requires an initial default bitrate to be set.</p>

<div style="width:320px;height:205px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:320px;height:205px;"
	id="rtmpDynamicNoCheckPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" width="320" height="205" />

</a>


<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpDynamicNoCheckPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			//netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});
	

</script>

</div>

<button rel="div.overlay:eq(6)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpDynamicNoCheckPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			//netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});
</code></pre>
</div>
</div>

<a name="rtmp_selectionstrategy"></a>
<h2><em>RTMP</em> With Custom Stream Selection Strategy Example</h2>

<p>
	RTMP Example with a custom stream selection strategy allowing for player containers to be resized on bandwidth detection. 
	It will choose a video that is under the maximum player container width.
</p>

<p>
	In this example the player container will be resized dynamically. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpSelectionPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>



<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpSelectionPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			// Use this connection for bandwidth detection
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart:true, 
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 640,
			
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				switchStreamInfo(mappedBitrate, streamName, oldStreamName);
				$("#rtmpSelectionPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
			},
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpSelectionPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#changeSelectionBitrate',{seperator: "<br/>"});

</script>



</div>


<button type="button" class="checkBandwidthBtn">Check Bandwidth</button>

<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>	
<div id="changeSelectionBitrate" style="display:none;">
	<label><input type="radio" name="bitrateBtn" value="{bitrate}" />{label}</label>
</div>
</div>

		
<button rel="div.overlay:eq(7)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">

flowplayer("rtmpSelectionPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			// Use this connection for bandwidth detection
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart:true, 
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 640,
			
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				switchStreamInfo(mappedBitrate, streamName, oldStreamName);
				$("#rtmpSelectionPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
			},
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpSelectionPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
		
	},
	log: loggingConfig

}).bwcheck('#changeSelectionBitrate',{seperator: "<br/>"});

		
$(document).ready(function () {	
	$('.checkBandwidthBtn').click(function() {
		$f().getPlugin("bwcheck").checkBandwidth();
	});
		
});

</code></pre>
</div>
</div>


<a name="rtmp_selectionresize"></a>
<h2><em>RTMP</em> With Custom Stream Selection Strategy And Dynamic Resizing Example</h2>



<p>
	In this example the player container will be resized dynamically. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpSelectionResizePlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>



<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
var info = null;
var bufferLength = 8;
flowplayer("rtmpSelectionResizePlayer", "@PLAYER_SWF@", {
	playlist: [
			            {
			              url: "flv:bbb", 
			
			              bitrates: [
			                        {url: "vod/demo.flowplayer/bbb_160x90", width: 160, height: 90, bitrate: 100},
			                        {url: "vod/demo.flowplayer/bbb_320x180", width: 320, height: 180, bitrate: 180},
			                        {url: "vod/demo.flowplayer/bbb_480x270", width: 480, height: 270, bitrate: 270},
			                        {url: "vod/demo.flowplayer/bbb_640x360", width: 800, height: 600, bitrate: 360}
						           ]
						}
			        ],
	// configure the required plugins
	plugins:  {
		controls: {
			 height: 30,
			 bottom: 0,
			 autoHide: 'always',
			 progressColor: '#000000',
			 volumeSliderColor: '#000000',
			 buttonOverColor: '#CCCCCC'
		},
		
		content: contentPlugin,
		
		bufferInfo: {
			url: '../flowplayer.content.swf',
			 height: 30,
			 top: 0,
			 right: 0,
			 width: 200,
			 backgroundColor:'transparent',
			 backgroundGradient: 'none',
			 borderRadius: 0,
			 border:0,
			 style: { 
					'.buffering': { 
							fontSize: '18', 
							fontFamily: 'Arial',
							textAlign: 'right',

							color: '#000000'
					},
					'body': { 
							fontSize: '18', 
							fontFamily: 'Arial',
							textAlign: 'right',
							color: '#FFFFFF'
					} 
			}
		},
		bwCheckInfo: {
			 url: '../flowplayer.content.swf',
     
			 height: 30,
			 left: 0,
			 bottom: 32, 
			 width: 200,
			 backgroundColor:'transparent',
			 backgroundGradient: 'none',
			 borderRadius: 0,
			 opacity: 0,
			 border:0,
			 style: { 
					'.buffering': { 
							fontSize: '20', 
							fontFamily: 'Arial',
							textAlign: 'left',
							color: '#000000'
					},
					'body': { 
							fontSize: '20', 
							fontFamily: 'Arial',
							textAlign: 'left',
							color: '#ffffff'
					} 
			}
		},
		
		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},


		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			// Use this connection for bandwidth detection
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart:true, 
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 800,
			
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				switchStreamInfo(mappedBitrate, streamName, oldStreamName);
				$("#rtmpSelectionResizePlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
							
				var info = $f().getPlugin("bwCheckInfo");
												
				info.setHtml("<p>Bitrate: " + mappedBitrate.bitrate + "k</p>");
				info.fadeIn(2000, function(){
					info.fadeOut(20000);
				});
			},
			
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpSelectionResizePlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
				var info = $f().getPlugin("bwCheckInfo");
												
				info.setHtml("<p>Bitrate: " + mappedBitrate.bitrate + "k</p>");
				info.fadeIn(2000, function(){
					info.fadeOut(20000);
				});
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		start: 0,
		accelerated: true,
		// use bwcheck for all clips
		urlResolvers: 'bwcheck',
		onBeforeBegin: function(clip) {
            if (!options.isBwCheck) $f().getPlugin("bwcheck").setAutoBitrate(options.b);
			info = $f().getPlugin("bufferInfo");
			info.fadeIn(1000);
			interval = setInterval(function(){
				if ($f().getStatus().bufferEnd > 0)
				{
					var perc = Math.ceil(($f().getStatus().bufferEnd / bufferLength) * 100) + " %";
					info.setHtml("<span>Buffering ... " + perc + "</span>");
				}
			}, 1000);

			info.setHtml("<span class='buffering'>Buffering ...</span>");
			
		},
		onBufferEmpty: function(clip) {

			info.setHtml("<p>Buffering ...</p>");
			info.fadeIn(1000);
			interval = setInterval(function(){
				if ($f().getStatus().bufferEnd > 0)
				{
					var perc = Math.ceil(($f().getStatus().bufferEnd / bufferLength) * 100) + " %";
					info.setHtml("<span>Buffering ... " + perc + "</span>");
				}
			}, 1000);

		},
		onBufferFull: function(clip) {
			info = $f().getPlugin("bufferInfo");
			info.setHtml("<p></p>");
			info.fadeOut(1000);
			clearInterval(interval);
		},
		onBegin: function(clip) {
			$f().getPlugin("controls").show();
            
		},
		
		onFinish: function(clip) {
			clearInterval(interval);
			info.fadeOut(1000);
		}
	},
	log: loggingConfig

}).bwcheck('#changeSelectionResizeBitrate',{seperator: "<br/>"});

</script>



</div>


<button type="button" class="checkBandwidthBtn">Check Bandwidth</button>


<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>	
<div id="changeSelectionResizeBitrate" style="display:none;">
	<label><input type="radio" name="bitrateBtn" value="{bitrate}" />{label}</label>
</div>
</div>

<button rel="div.overlay:eq(8)" type="button">Configuration For This Example</button>


<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpSelectionResizePlayer", "@PLAYER_SWF@", {
	playlist: [
			            {
			              url: "flv:bbb", 
			
			              bitrates: [
			                        {url: "vod/demo.flowplayer/bbb_160x90", width: 160, height: 90, bitrate: 100},
			                        {url: "vod/demo.flowplayer/bbb_320x180", width: 320, height: 180, bitrate: 180},
			                        {url: "vod/demo.flowplayer/bbb_480x270", width: 480, height: 270, bitrate: 270},
			                        {url: "vod/demo.flowplayer/bbb_640x360", width: 800, height: 600, bitrate: 360}
						           ]
						}
			        ],
	// configure the required plugins
	plugins:  {
		controls: {
			 height: 30,
			 bottom: 0,
			 autoHide: 'always',
			 progressColor: '#000000',
			 volumeSliderColor: '#000000',
			 buttonOverColor: '#CCCCCC'
		},
		
		content: contentPlugin,
		
		bufferInfo: {
			url: '../flowplayer.content.swf',
			 height: 30,
			 top: 0,
			 right: 0,
			 width: 200,
			 backgroundColor:'transparent',
			 backgroundGradient: 'none',
			 borderRadius: 0,
			 border:0,
			 style: { 
					'.buffering': { 
							fontSize: '18', 
							fontFamily: 'Arial',
							textAlign: 'right',

							color: '#000000'
					},
					'body': { 
							fontSize: '18', 
							fontFamily: 'Arial',
							textAlign: 'right',
							color: '#FFFFFF'
					} 
			}
		},
		bwCheckInfo: {
			 url: '../flowplayer.content.swf',
     
			 height: 30,
			 left: 0,
			 bottom: 32, 
			 width: 200,
			 backgroundColor:'transparent',
			 backgroundGradient: 'none',
			 borderRadius: 0,
			 opacity: 0,
			 border:0,
			 style: { 
					'.buffering': { 
							fontSize: '20', 
							fontFamily: 'Arial',
							textAlign: 'left',
							color: '#000000'
					},
					'body': { 
							fontSize: '20', 
							fontFamily: 'Arial',
							textAlign: 'left',
							color: '#ffffff'
					} 
			}
		},
		
		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},


		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			// Use this connection for bandwidth detection
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart:true, 
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 800,
			
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				switchStreamInfo(mappedBitrate, streamName, oldStreamName);
				$("#rtmpSelectionResizePlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
							
				var info = $f().getPlugin("bwCheckInfo");
												
				info.setHtml("<p>Bitrate: " + mappedBitrate.bitrate + "k</p>");
				info.fadeIn(2000, function(){
					info.fadeOut(20000);
				});
			},
			
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpSelectionResizePlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
				var info = $f().getPlugin("bwCheckInfo");
												
				info.setHtml("<p>Bitrate: " + mappedBitrate.bitrate + "k</p>");
				info.fadeIn(2000, function(){
					info.fadeOut(20000);
				});
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		start: 0,
		accelerated: true,
		// use bwcheck for all clips
		urlResolvers: 'bwcheck',
		onBeforeBegin: function(clip) {
            if (!options.isBwCheck) $f().getPlugin("bwcheck").setAutoBitrate(options.b);
			info = $f().getPlugin("bufferInfo");
			info.fadeIn(1000);
			interval = setInterval(function(){
				if ($f().getStatus().bufferEnd > 0)
				{
					var perc = Math.ceil(($f().getStatus().bufferEnd / bufferLength) * 100) + " %";
					info.setHtml("<span>Buffering ... " + perc + "</span>");
				}
			}, 1000);

			info.setHtml("<span class='buffering'>Buffering ...</span>");
			
		},
		onBufferEmpty: function(clip) {

			info.setHtml("<p>Buffering ...</p>");
			info.fadeIn(1000);
			interval = setInterval(function(){
				if ($f().getStatus().bufferEnd > 0)
				{
					var perc = Math.ceil(($f().getStatus().bufferEnd / bufferLength) * 100) + " %";
					info.setHtml("<span>Buffering ... " + perc + "</span>");
				}
			}, 1000);

		},
		onBufferFull: function(clip) {
			info = $f().getPlugin("bufferInfo");
			info.setHtml("<p></p>");
			info.fadeOut(1000);
			clearInterval(interval);
		},
		onBegin: function(clip) {
			$f().getPlugin("controls").show();
            
		},
		
		onFinish: function(clip) {
			clearInterval(interval);
			info.fadeOut(1000);
		}
	},
	log: loggingConfig

}).bwcheck('#changeSelectionResizeBitrate',{seperator: "<br/>"});
</code></pre>
</div>
</div>


<a name="rtmp_qosmonitor"></a>
<h2><em>RTMP</em> With Quality Of Service Monitor Enabled</h2>

<p>
	RTMP Example with the quality of service monitor enabled without dynamic stream switching support. Stream switching will switch for RTMP but not seamless.
</p>

<p>
	An initial bitrate is set using the setInitialBitrate method, and the Qos Monitoring will upgrade the stream to suit the connection. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpQosPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>


<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpQosPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			enableQosMonitor: true,
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 640,
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				streamSwitchInfo(appedBitrate, streamName, oldStreamName);
				$("#rtmpQosPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
			},
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpQosPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});


	

</script>



</div>


<button rel="div.overlay:eq(9)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpQosPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			enableQosMonitor: true,
			streamSelectionStrategy: 'resizable',
			maxContainerWidth: 640,
			
			onStreamSwitch: function(mappedBitrate, streamName, oldStreamName) {
				streamSwitchInfo(appedBitrate, streamName, oldStreamName);
				$("#rtmpQosPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));
			},
			// this method is called when the bandwidth check is done
			onBwDone: function(mappedBitrate, detectedBitrate) {
				bwDoneInfo(mappedBitrate, detectedBitrate);
				$("#rtmpQosPlayer")
							.width(parseInt(mappedBitrate.width))
							.height(parseInt(mappedBitrate.height));	
			}
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck',
		onBeforeBegin: function(clip) {
        	$f().getPlugin("bwcheck").setInitialBitrate(270);
        }
	},
	log: loggingConfig

});
</code></pre>
</div>
</div>

<a name="rtmp_rss"></a>
<h2><em>RTMP</em> With RSS Yahoo Media Extension Playlist Example</h2>

<p>
	RTMP Example using a <a href="http://amazon.flowplayer.org/documentation/configuration/playlists.html#rss">RSS playlist</a> with the <a href="http://en.wikipedia.org/wiki/Media_RSS">Yahoo Media RSS</a> extension to configure the bitrates. 
</p>
<p>
The media:content tag needs to be grouped in a media:group tag like so:

</p>

<div class="box code">
<pre><code class="html">
&lt;media:group&gt;
   &lt;media:content type="video/x-flv" url="flv:bbb_160x90" width="160" height="90" bitrate="100"/&gt;
&lt;/media:group&gt;
</code></pre>
</div>


<p>
  The Following table lists how the RSS data is mapped to playlist clip bitrates property:
</p>
<table class="listing">
	<tr>
		<th>RSS</th>
		<th>Bitrate property</th>
	</tr>
    <tr>
        <td class="code">media:content / url</td>
        <td>
            The clip's URL. Does not require the absolute url, will use the baseUrl for the http provider, may require the full prefix for flv and a prefix for mp4 files. 
        </td>
    </tr>
    <tr>
        <td class="code">media:content / width</td>
        <td>
            The clip's width (required)
        </td>
    </tr>
    <tr>
        <td class="code">media:content / bitrate</td>
        <td>
            The clip's bitrate (required)
        </td>
    </tr>
    <tr>
        <td class="code">media:content / type</td>
        <td>
            The clip's content type (required)
        </td>
    </tr>
    <tr>
        <td class="code">media:content / height</td>
        <td>
            The clip's height (optional)
        </td>
    </tr>
</table>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpRSSPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>


<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >
flowplayer("rtmpRSSPlayer", "@PLAYER_SWF@", {
	playlist: "example.rss",
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart: true,
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});


	

</script>



</div>

<button rel="div.overlay:eq(10)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpRSSPlayer", "@PLAYER_SWF@", {
	playlist: "example.rss",
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamic: true,
			checkOnStart: true,
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});
</code></pre>
</div>
</div>

<a name="rtmp_dynamicbuffer"></a>
<h2><em>RTMP</em> With Dynamic Buffering Example</h2>

<p>
	RTMP Example with dynamic buffer time calculation. Expects a bitrate to be detected / set before playback. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpBufferPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>



<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

flowplayer("rtmpBufferPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamicBuffer: true,
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});

	

</script>



</div>


<button rel="div.overlay:eq(11)" type="button">Configuration For This Example</button>

<div class="overlay">
<div class="box code">
<pre><code class="javascript">
flowplayer("rtmpBufferPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			bitrateProfileName: 'RTMPBitrateProfile',
			dynamicBuffer: true,
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});

</code></pre>
</div>
</div>

<a name="rtmp_error"></a>
<h2><em>RTMP</em> With Bandwidth Check URL and Default Bitrate Failover Example</h2>

<p>
	This examples demonstrates when there is an error with the bwcheck urls, it will failover to the defaultBitrate config. 
</p>

<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="rtmpErrorPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

flowplayer("rtmpErrorPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			// Wowza media server bandwidth checking type
			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck2',
			defaultBitrate: 270,
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});

</script>



</div>

<p>
     Note that the <samp>serverType</samp>  value that needs to
    be defined for streaming server connecting to, either fms, red5 or wowza.
</p>

<button rel="div.overlay:eq(12)" type="button">Configuration For This Example</button>


<div class="overlay">
<div class="box code">
<pre><code class="javascript">flowplayer("rtmpErrorPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			// Wowza media server bandwidth checking type
			serverType: 'wowza',

			// Use this connection for bandwidth detection
			//netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck2',
			defaultBitrate: 270,
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',
		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

});</code></pre>
</div>
</div>

<a name="clustering"></a>
<h3>Clustering of bandwidth checks</h3>

<p>
    You can configure an array of hosts to be used for the bandwidth check. The plugin chooses a live host from this array until it finds one that does not fail. This provides a way to add failover. Here is an example configuration on how to configure clustering for the bandwidht check:
</p>

<div class="box code">
<pre><code class="javascript">bwcheck: {
        url: 'flowplayer.rtmp-3.1.3.swf',
        serverType: 'red5',

        // the actual streaming happens from this host. In reality you would
        // probably configure a cluster of hosts here too.
        netConnectionUrl: 'rtmp://electroteque.org/bwcheck',

        // the hosts used for bandwidth checking
        hosts: [
            {host:'rtmp://electroteque1.org/bwcheck'},
            {host:'rtmp://electroteque2.org/bwcheck'},
            {host:'rtmp://electroteque.org/bwcheck'}
        ],

        defaultBitrate: 300
    }</code></pre>
</div>


<p>
	The configuration above is for clustering the bandwidth checking connections only. If you want to cluster your streaming connections, then you need to use our <a href="cluster.html">clustering plugin</a>.
</p>

<div class="box petrol">
	The clustering configuration for bandwidth checking and for the actual streaming are separate. This is because in many cases the RMTP applications used for bandwidth checking are different from the applications that are used for streaming, and therefore their host URLs are also different.
</div>



<h3>Using it together with other plugins</h3>

<p>
	You can use bandwidth checking together with other plugins like the <a href="/plugins/streaming/secure.html">secure streaming plugin</a>. In fact it is possible to chain together 2 or more URL resolver plugins.
</p>

<a name="api"></a>
<h2>JavaScript API</h2>

<h3>Methods</h3>

<table class="listing">
    <thead>
		<tr>
			<th class="col1">method</th>
			<th class="col2">returns</th>
			<th class="col3">description</th>
		</tr>
    </thead>
    <tr>
        <td class="code">
				<strong>getBitrate</strong>
        </td>
        <td class="code type">int</td>
        <td class="description">
			Returns the mapped bitrate after it has been detected. If playback is not started then this method tries to return the remembered bitrate if the <samp>rememberBitrate</samp> configuration option is enabled.
        </td>
    </tr>
    <tr>
        <td class="code">
            <strong>setBitrate</strong>(bitrate)
        </td>
        <td class="code type"></td>
        <td class="description">
			Changes the stream to the specified bitrate. The specified value should be one of the values contained in the <samp>bitrates</samp> array. If the player is currently playing a clip, the stream corresponding to the specified bitrate is started. If <a href="#dynamic">dynamic stream switching</a> is enabled, the stream switches dynamically while playing, otherwise the stream plays from the start of the clip. <strong>Note:</strong> Dynamic stream switching is disabled when this method is called so that the dynamic adaption does not override the bitrate specified using this method. You can enable dynamic switching again using the <samp>dynamic()</samp> method (see below).
        </td>
    </tr>
    <tr>
        <td class="code">
            <strong>setInitialBitrate</strong>(bitrate)
        </td>
        <td class="code type"></td>
        <td class="description">
			Like setBitrate changes the stream to the specified bitrate, but to be used as the initial stream. To be used in conjunction with quality of service monitoring to manage the stream in realtime.
        </td>
    </tr>
    <tr>
        <td class="code">
            <strong>dynamic</strong>(enabled)
        </td>
        <td class="code type"></td>
        <td class="description">
        	Enables or disables dynamic stream switching. The specified <samp>enabled</samp> value is a Boolean specifying the enabled state.
        </td>
    </tr>
    <tr>
        <td class="code">
            <strong>checkBandwidth</strong>()
        </td>
        <td class="code type"></td>
        <td class="description">
            Initiates a new bandwidth check. The detected bandwidth is stored in the client browser if the config option
            <samp>rememberBitrate</samp> is set to <samp>true</samp>. If the player is currently playing a clip, a new stream based on the detected bandwidth is selected and started. If <a href="#dynamic">dynamic stream switching</a> is enabled, the stream switches dynamicaly while playing, otherwise, the stream plays from the start of the clip. When the bandwidth check is successfully called the <samp>onBwDone</samp> event is called allowing you to get the results.
        </td>
    </tr>
    <tr>
        <td class="code">
				<strong>getLabels</strong>
        </td>
        <td class="code type">object</td>
        <td class="description">
			Returns an object of bitrate label mappings set with the <samp>labels</samp> configuration option.
        </td>
    </tr>
     <tr>
        <td class="code">
				<strong>getSelectionStrategy</strong>
        </td>
        <td class="code type">strings</td>
        <td class="description">
			Returns the stream selection strategy config also set with the <samp>streamSelectionStrategy</samp> configuration option.
        </td>
    </tr>
    
</table>

<h3>Events</h3>

<table class="listing">
	<thead>
		<tr>
			<th nowrap="nowrap">Event</th>
			<th style="width:450px">When does it fire?</th>
		</tr>
	</thead>

    <tr>
        <td class="code"><em>onBwDone()</em></td>
        <td class="description">
				Fires when the bandwidth has been detected. The callback is fed with the following arguments:

				<ul>
					<li><samp>url</samp> the complete URL that was resolved for playback</li>
					<li><samp>mappedBitrate</samp> the bitrate selected from the <samp>bitrates</samp> array</li>
					<li><samp>detectedBitrate</samp> the detected bitrate used to resolve the <samp>mappedBitrate</samp></li>
				</ul>
        </td>
    </tr>
    <tr>
        <td class="code"><em>onStreamSwitch()</em></td>
        <td class="description">
				Fires when the bandwidth has been dynamically switched. This event is called only when the <samp>dynamic</samp> configuration property is enabled. The callback is fed with the following arguments:

				<ul>
					<li><samp>bitrate</samp> the bitrate selected from the <samp>bitrates</samp> array</li>
					<li><samp>newUrl</samp> the complete URL that was resolved for playback</li>
					<li><samp>oldUrl</samp> the previous URL being used before the switch</li>
				</ul>

				<p>
					You can see this event in action in the <a href="/demos/plugins/streaming/bwcheck-dynamic.html">dynamic switching demo</a>.
				</p>
        </td>
    </tr>
</table>

<p>
    Here are the events related to establishing a connection and clustering. Note that if you are not clustering the hosts used for bandwidth checking, the <samp>host index</samp>
    will always have a value of zero.
</p>


<table class="listing">
	<thead>
		<tr>
			<th nowrap="nowrap">Event</th>
			<th style="width:450px">When does it fire?</th>
		</tr>
	</thead>
    <tr>
        <td class="code"><em>onConnect()</em></td>
        <td class="description">
				Fires when the plugin starts a new connection attempt. The callback is fed with two arguments:

				<ul>
					<li><samp>host</samp> the URL from the hosts list where the connection is attempted from.</li>
					<li><samp>hostIndex</samp> the index of the <samp>host</samp> in the hosts list.</li>
				</ul>
        </td>
    </tr>
    <tr>
        <td class="code"><em>onConnectFailed()</em></td>
        <td class="description">
				Fires when a connection attempt has failed. The callback is fed with two arguments:

				<ul>
					<li><samp>host</samp> the URL from the hosts list where the failure happened.</li>
					<li><samp>hostIndex</samp> the index of the <samp>host</samp> in the hosts list.</li>
				</ul>
        </td>
    </tr>
    <tr>
        <td class="code"><em>onFailed()</em></td>
        <td class="description">
				Fires when all hosts in the cluster have failed. See also the <a href="#config">connectCount option</a>, that specifies how many times the hosts are evaluated before failing.
        </td>
    </tr>
</table>

<a name="javascript_plugin"></a>
<h2>JavaScript Plugin</h2>
<p>Available is the bwcheck javascript plugin which provides a way to dynamically generate a list of stylable / templatable bitrate selection links.</p>
<p>A template of the listing can be set in the html of the set wrapper, and using special variables can be replaced with the required fields.</p>
<p>If the default stream selection strategy is used, it will check the width of the player and the bitrate width and disable the bitrate selections larger than the player width along with info text.</p>




<div style="width:425px;margin:30px auto">
   


<!-- player container-->


<a
	href="skyandice"
	style="display:block;width:425px;height:300px;"
	id="javascriptPluginPlayer">

	<!-- splash image inside the container -->
	<img src="http://www.flowplayer.org/img/home/flow_eye.jpg" alt="Search engine friendly content" />

</a>

<!-- Flowplayer installation and configuration -->
<script type="text/javascript" >

$f("javascriptPluginPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',

		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#javascriptPlugin',{seperator: " | "});



</script>



</div>


<div style="display:none;">
<b>Choose Video Bitrate:</b> <br/>		
<div id="javascriptPlugin" style="display:none;">
	<a href="{bitrate}">{label}</a>
</div>
</div>

<button rel="div.overlay:eq(13)" type="button">Configuration For This Example</button>


<div class="overlay">
<div class="box code">
<pre><code class="javascript">
$f("javascriptPluginPlayer", "@PLAYER_SWF@", {
	playlist: wowzaPlaylist,
	// configure the required plugins
	plugins:  {

		// RTMP streaming plugin
		rtmp: {
			url: '../flowplayer.rtmp.swf',
			netConnectionUrl: 'rtmp://vod01.netdna.com/play'
		},
		content: contentPlugin,

		// bandwidth check plugin
		bwcheck: {
			url: '@MAIN_PLAYER_SWF@',

			serverType: 'wowza',

			// Use this connection for bandwidth detection
			netConnectionUrl: 'rtmp://flashy.flowplayer.org:1935/bwcheck',
			
			bitrateProfileName: 'RTMPBitrateProfile',
			
			onStreamSwitch: switchStreamInfo,
			// this method is called when the bandwidth check is done
			onBwDone: bwDoneInfo
		}

	},

	// configure the clip to use the rtmp plugin for providing video data
	// and the bwcheck plugin in resolving the URLs
	clip: {
		provider: 'rtmp',

		// use bwcheck for all clips
		urlResolvers: 'bwcheck'
	},
	log: loggingConfig

}).bwcheck('#javascriptPlugin',{seperator: " | "});

</code></pre>
</div>
</div>


<br/><br/><b>Configuration:</b>
<table class="listing">
	<thead>
		<tr>
			<th nowrap="nowrap">property / datatype</th>
			<th>default</th>
			<th>description</th>
		</tr>
	</thead>

    <tr>
        <td class="code">checkOnStart <div class="type">boolean</div></td>
        <td class="code default">true</td>
        <td class="description">
            If <samp>true</samp> (the default) the plugin checks the bandwidth for every clip once their playback starts <em>even when the clips don't specify this plugin as their <samp>urlResolver</samp>.</em> Specify <samp>false</samp> here if you have clips in the playlist for which the bandwidth should not be checked.
        </td>
    </tr>
    <tr>
        <td class="code">selectedBitrateClass <div class="type">string</div></td>
        <td class="code default">bitrate-selected</td>
        <td class="description">
            The selected bitrate link class.
        </td>
    </tr>
    <tr>
        <td class="code">activeClass <div class="type">string</div></td>
        <td class="code default">bitrate-active</td>
        <td class="description">
            The active bitrate link class.
        </td>
    </tr>
    <tr>
        <td class="code">disabledClass <div class="type">string</div></td>
        <td class="code default">bitrate-disabled</td>
        <td class="description">
            The disabled bitrate link class.
        </td>
    </tr>
    <tr>
        <td class="code">bwCheckPlugin <div class="type">string</div></td>
        <td class="code default">bwcheck</td>
        <td class="description">
				The name of the bandwidth check plugin in the player configuration.
        </td>
    </tr>
    <tr>
        <td class="code">template <div class="type">string</div></td>
        <td class="code default"><a href="{bitrate}">{bitrate} k</a></td>
        <td class="description">
        	The template config to be used for generating the links. The fields of the bitrates clip config are used as the template variables ie {bitrate}.
        	If the wrapper has the template set, it will be used instead of the template config.
        </td>
    </tr>
    <tr>
        <td class="code">disabledText <div class="type">string</div></td>
        <td class="code default">(not valid with this player size )</td>
        <td class="description">
            The text to display if the item is disabled due to size constraints and the selection strategy. 
        </td>
    </tr>
    <tr>
        <td class="code">fadeTime <div class="type">int</div></td>
        <td class="code default">100</td>
        <td class="description">
				The interval time for fading the wrapper in and out. Useful for hiding the wrapper if a template is set in it. 
        </td>
    </tr>
    <tr>
        <td class="code">seperator <div class="type">string</div></td>
        <td class="code default"></td>
        <td class="description">
				A seperator character to use for seperating the links ie <br/> or | .
        </td>
    </tr>
</table>


</div>
		
		
		
	</div>

	
	
	
			
</body>

</html>
