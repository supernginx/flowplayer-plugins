/* * This file is part of Flowplayer, http://flowplayer.org * * By: Daniel Rossi, <electroteque@gmail.com>, Anssi Piirainen Flowplayer Oy * Copyright (c) 2008-2011 Flowplayer Oy * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.cluster {    import flash.events.Event;    import flash.events.IOErrorEvent;    import flash.events.NetStatusEvent;    import flash.net.NetConnection;    import flash.net.NetStream;	import flash.net.Responder;	import flash.utils.*;    import org.flowplayer.controller.ConnectionProvider;    import org.flowplayer.controller.NetConnectionClient;    import org.flowplayer.controller.NetStreamClient;    import org.flowplayer.controller.NetStreamControllingStreamProvider;    import org.flowplayer.controller.StreamProvider;    import org.flowplayer.controller.ClipURLResolver;    import org.flowplayer.model.Clip;    import org.flowplayer.model.ClipEvent;    import org.flowplayer.model.Plugin;import org.flowplayer.model.PluginEventType;    import org.flowplayer.model.PluginModel;    import org.flowplayer.util.Log;    import org.flowplayer.util.PropertyBinder;    import org.flowplayer.util.URLUtil;    import org.flowplayer.view.Flowplayer;    /**     * Supports following:     *     * - Duration querying connection provider     * - Subscribing connection provider     * - Parallel rtmp connection provider     *     * @author Anssi Piirainen, Flowplayer ltd.     */    public class ClusterConnectionProvider implements ConnectionProvider {        public function set connectionClient(client:Object):void {        }        public function set onFailure(listener:Function):void {        }        public function connect(provider:StreamProvider, clip:Clip, successListener:Function, objectEncoding:uint, connectionArgs:Array):void {        }        public function handeNetStatusEvent(event:NetStatusEvent):Boolean {            return false;        }    }}