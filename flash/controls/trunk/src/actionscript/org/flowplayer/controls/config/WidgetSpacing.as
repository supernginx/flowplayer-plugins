/*     *    Copyright 2008, 2009 Flowplayer Oy * *    This file is part of FlowPlayer. * *    FlowPlayer is free software: you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation, either version 3 of the License, or *    (at your option) any later version. * *    FlowPlayer is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with FlowPlayer.  If not, see <http://www.gnu.org/licenses/>. */package org.flowplayer.controls.config {	/**	 * @author api	 */    import flash.display.DisplayObject;    import org.flowplayer.util.Log;		public class WidgetSpacing {		protected var log:Log = new Log(this);				private var _values:Object = new Object();		private var _properties:Array = ["play", "stop", "mute", "volume", "time", "scrubber", "playlist", "slowBackward", "fastBackward", "slowForward", "fastForward" , "fullscreen"];        public function getSpaceAfterWidget(widget:DisplayObject):Number {            var val:Number = value(widget.name);            log.debug("space after " + widget.name + " is " + val);            return val;        }		public function reset():void {			_values = new Object();		}				protected function value(prop:String, defaultVal:Number = 2):Number {			if (_values[prop] == undefined) return defaultVal;			return _values[prop];		}		        [Value]		public function get play():Number {			return value("play");		}		public function set play(play:Number):void {			_values["play"] = play;		}        [Value]		public function get volume():Number {			return value("volume");		}		public function set volume(volume:Number):void {			_values["volume"] = volume;		}		        [Value]		public function get mute():Number {			return value("mute");		}		public function set mute(mute:Number):void {			_values["mute"] = mute;		}        [Value]		public function get time():Number {			return value("time");		}		public function set time(time:Number):void {			_values["time"] = time;		}		        [Value]		public function get scrubber():Number {			return value("scrubber");		}		public function set scrubber(scrubber:Number):void {			_values["scrubber"] = scrubber;		}        [Value]		public function get stop():Number {			return value("stop");		}		public function set stop(stop:Number):void {			_values["stop"] = stop;		}        [Value]        public function get playlist():Number {            return value("playlist");        }        public function get next():Number {            return playlist;        }        public function get prev():Number {            return playlist;        }		public function set playlist(playlist:Number):void {			_values["playlist"] = playlist;		}		public function set slowForward(slowmotion:Number):void {			_values["slowForward"] = slowmotion;		}				[Value]        public function get slowForward():Number {            return value("slowForward");        }		public function set slowBackward(slowmotion:Number):void {			_values["slowBackward"] = slowmotion;		}		[Value]        public function get slowBackward():Number {            return value("slowBackward");        }		public function set fastForward(slowmotion:Number):void {			_values["fastForward"] = slowmotion;		}		[Value]		public function get fastForward():Number {            return value("fastForward");        }		public function set fastBackward(slowmotion:Number):void {			_values["fastBackward"] = slowmotion;		}				[Value]        public function get fastBackward():Number {            return value("fastBackward");        }		        [Value]		public function get fullscreen():Number {			return value("fullscreen");		}		public function set fullscreen(fullscreen:Number):void {			_values["fullscreen"] = fullscreen;		}				public function set all(value:Number):void {			for (var i:Number = 0;i < _properties.length; i++) {				if (_values[_properties[i]] == undefined) {					_values[_properties[i]] = value;				}			}		}	}}