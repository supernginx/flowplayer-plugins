/* * This file is part of Flowplayer, http://flowplayer.org * * By: Anssi Piirainen, <support@flowplayer.org> *Copyright (c) 2008, 2009 Flowplayer Oy * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.controls {	import org.flowplayer.util.Log;			import com.adobe.utils.StringUtil;			import org.flowplayer.util.StyleSheetUtil;	/**	 * @author api	 */	public class Style {		private var log:Log = new Log(this);		// this holds style properties used by the StyleableSprite class (superclass of our Controls class)		private var _bgStyle:Object;				private var _style:Object = new Object();				public function addStyleProps(obj:Object):Object {			for (var propName:String in _style) {				obj[propName] = _style[propName];			}			return obj;		}		public function set bgStyle(styleObj:Object):void {			log.debug("setting bgStyle");			_bgStyle = styleObj;		}		public function get bgStyle():Object {			log.debug("getting bgStyle");			return _bgStyle;		}		public function get durationColor():Number {			return StyleSheetUtil.colorValue(_style["durationColor"]);		}				public function get durationAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["durationColor"]);		}		public function setDurationColor(color:String):void {			_style["durationColor"] = color;		}		// setters are not accessors, because they have different parameter type		public function setTimeColor(color:String):void {			_style["timeColor"] = color;		}				public function get timeColor():Number {			return StyleSheetUtil.colorValue(_style["timeColor"]);		}				public function get timeAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["timeColor"]);		}				public function get bufferColor():Number {			return StyleSheetUtil.colorValue(_style["bufferColor"]);		}				public function get bufferAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["bufferColor"]);		}				public function setBufferColor(color:String):void {			_style["bufferColor"] = color;		}				public function setBufferGradient(gradient:Object):void {			_style["bufferGradient"] = gradient;		}				public function get bufferGradient():Array {			return decodeGradient(_style["bufferGradient"]);		}				public function get buttonColor():Number {			return StyleSheetUtil.colorValue(_style["buttonColor"]);		}				public function get buttonAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["buttonColor"]);		}				public function get buttonColorRGB():Array {			return StyleSheetUtil.rgbValue(buttonColor);		}				public function get buttonColorRGBA():Array {			var rgba:Array = buttonColorRGB;			rgba.push(buttonAlpha);			return rgba;		}				public function setButtonColor(color:String):void {			_style["buttonColor"] = color;		}				public function setButtonOverColor(button:String):void {			_style["buttonOverColor"] = button;		}				public function get buttonOverColor():Number {			return StyleSheetUtil.colorValue(_style["buttonOverColor"]);		}				public function get buttonOverAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["buttonOverColor"]);		}				public function get buttonOverColorRGB():Array {			return StyleSheetUtil.rgbValue(buttonOverColor);		}				public function get buttonOverColorRGBA():Array {			var rgba:Array = buttonOverColorRGB;			rgba.push(buttonOverAlpha);			return rgba;		}        public function get sliderColor():Number {            return StyleSheetUtil.colorValue(_style["sliderColor"]);        }		public function get sliderAlpha():Number {	        return StyleSheetUtil.colorAlpha(_style["sliderColor"]);	    }        public function get sliderGradient():Array {            return decodeGradient(_style["sliderGradient"]);        }        public function get volumeSliderColor():Number {            return StyleSheetUtil.colorValue(_style["volumeSliderColor"]);        }		public function get volumeSliderAlpha():Number {            return StyleSheetUtil.colorAlpha(_style["volumeSliderColor"]);        }		public function get volumeColor():Number {            return StyleSheetUtil.colorValue(_style["volumeColor"], -2);        }		public function get volumeAlpha():Number {            return StyleSheetUtil.colorAlpha(_style["volumeColor"], -2);        }        public function get volumeSliderGradient():Array {            return decodeGradient(_style["volumeSliderGradient"]);        }        public function setSliderColor(color:String):void {            _style["sliderColor"] = color;        }        public function setSliderGradient(gradient:Object):void {            _style["sliderGradient"] = gradient;        }        public function setVolumeSliderColor(color:String):void {            _style["volumeSliderColor"] = color;        }		public function setVolumeColor(color:String):void {            _style["volumeColor"] = color;        }        public function setVolumeSliderGradient(gradient:Object):void {            _style["volumeSliderGradient"] = gradient;        }		public function set volumeBorder(border:String):void{			_style['volumeBorder'] = border;		}		public function get volumeBorderWidth():Number {            return StyleSheetUtil.borderWidth('volumeBorder', _style, 0);		}				public function set volumeBorderWidth(borderWidth:Number):void{			_style['volumeBorderWidth'] = borderWidth;		}				public function get volumeBorderColor():Number {            return StyleSheetUtil.borderColor('volumeBorder', _style);		}        public function get volumeBorderAlpha():Number {            return StyleSheetUtil.borderAlpha('volumeBorder', _style);        }		public function setVolumeBorderColor(borderColor:String):void {			_style['volumeBorderColor'] = borderColor;		}		public function get progressColor():Number {			return StyleSheetUtil.colorValue(_style["progressColor"]);		}				public function get progressAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["progressColor"]);		}				public function setProgressColor(color:String):void {			_style["progressColor"] = color;		}				public function get tooltipColor():Number {			return StyleSheetUtil.colorValue(_style["tooltipColor"]);		}				public function get tooltipAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["tooltipColor"]);		}				public function setTooltipColor(color:String):void {			_style["tooltipColor"] = color;		}				public function get tooltipTextColor():Number {			return StyleSheetUtil.colorValue(_style["tooltipTextColor"]);		}				public function get tooltipTextAlpha():Number {			return StyleSheetUtil.colorAlpha(_style["tooltipTextColor"]);		}				public function setTooltipTextColor(color:String):void {			_style["tooltipTextColor"] = color;		}				public function setProgressGradient(gradient:Object):void {			_style["progressGradient"] = gradient;		}				public function get progressGradient():Array {			return decodeGradient(_style["progressGradient"]);		}								public function set sliderBorder(border:String):void{			_style['sliderBorder'] = border;		}		public function get sliderBorderWidth():Number {            return StyleSheetUtil.borderWidth('sliderBorder', _style, 0);		}				public function set sliderBorderWidth(borderWidth:Number):void{			_style['sliderBorderWidth'] = borderWidth;		}				public function get sliderBorderColor():Number {            return StyleSheetUtil.borderColor('sliderBorder', _style);		}        public function get sliderBorderAlpha():Number {            return StyleSheetUtil.borderAlpha('sliderBorder', _style);        }		public function setSliderBorderColor(borderColor:String):void {			_style['sliderBorderColor'] = borderColor;		}				        public function get timeBorderRadius():Number {            return _style["timeBorderRadius"];        }        public function set timeBorderRadius(val:Number):void {            _style["timeBorderRadius"] = val;        }		public function set timeBorder(border:String):void{			_style['timeBorder'] = border;		}		public function get timeBorderWidth():Number {            return StyleSheetUtil.borderWidth('timeBorder', _style, 0);		}				public function set timeBorderWidth(borderWidth:Number):void{			_style['timeBorderWidth'] = borderWidth;		}				public function get timeBorderColor():Number {            return StyleSheetUtil.borderColor('timeBorder', _style);		}        public function get timeBorderAlpha():Number {            return StyleSheetUtil.borderAlpha('timeBorder', _style);        }		public function setTimeBorderColor(borderColor:String):void {			_style['timeBorderColor'] = borderColor;		}				        public function get scrubberBorderRadius():Number {            return _style["scrubberBorderRadius"];        }        public function set scrubberBorderRadius(val:Number):void {            _style["scrubberBorderRadius"] = val;        }        public function get volumeBorderRadius():Number {            return _style["volumeBorderRadius"];        }        public function set volumeBorderRadius(val:Number):void {            _style["volumeBorderRadius"] = val;        }        public function get timeBgColor():Number {            return StyleSheetUtil.colorValue(_style["timeBgColor"]);        }		public function get timeBgAlpha():Number {            return StyleSheetUtil.colorAlpha(_style["timeBgColor"]);        }        public function setTimeBgColor(color:String):void {            _style["timeBgColor"] = color;        }        public function get scrubberHeightRatio():Number {            return _style["scrubberHeightRatio"];        }        public function set scrubberHeightRatio(val:Number):void {            _style["scrubberHeightRatio"] = val;        }        public function get scrubberBarHeightRatio():Number {            return _style["scrubberBarHeightRatio"];        }        public function set scrubberBarHeightRatio(val:Number):void {            _style["scrubberBarHeightRatio"] = val;        }        public function get volumeSliderHeightRatio():Number {            return _style["volumeSliderHeightRatio"];        }        public function set volumeSliderHeightRatio(val:Number):void {            _style["volumeSliderHeightRatio"] = val;        }        public function get volumeBarHeightRatio():Number {            return _style["volumeBarHeightRatio"];        }        public function set volumeBarHeightRatio(val:Number):void {            _style["volumeBarHeightRatio"] = val;        }        public function get timeBgHeightRatio():Number {            return _style["timeBgHeightRatio"];        }        public function set timeBgHeightRatio(val:Number):void {            _style["timeBgHeightRatio"] = val;        }		public function get timeSeparator():String {            return _style["timeSeparator"];        }        public function set timeSeparator(val:String):void {            _style["timeSeparator"] = val;        }		public function get timeFontSize():Number {            return _style["timeFontSize"];        }        public function set timeFontSize(val:Number):void {            _style["timeFontSize"] = val;        }        public function set margins(val:Array):void {            _style["margins"] = val;        }        public function get margins():Array {            return _style["margins"];        }		private function decodeGradient(value:Object, defVal:String = "medium"):Array {			if (! value) return decodeGradient(defVal);			if (value is Array) return value as Array;			if (value == "none") return null;			if (value == "high") return [.1, 0.5, .1];			if (value == "medium") return [0, .25, 0];			return decodeGradient(defVal);		}    }}