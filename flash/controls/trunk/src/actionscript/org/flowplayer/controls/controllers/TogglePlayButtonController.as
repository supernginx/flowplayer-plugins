/* * Author: Thomas Dubois, <thomas _at_ flowplayer org> * This file is part of Flowplayer, http://flowplayer.org * * Copyright (c) 2011 Flowplayer Ltd * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.controls.controllers {    	import org.flowplayer.view.Flowplayer;	import org.flowplayer.model.PlayerEvent;	import org.flowplayer.model.ClipEvent;		import org.flowplayer.ui.buttons.ToggleButtonConfig;	import org.flowplayer.ui.buttons.ButtonEvent;	import org.flowplayer.ui.buttons.ToggleButton;		import org.flowplayer.controls.Controlbar;	import org.flowplayer.controls.SkinClasses;	import flash.display.DisplayObjectContainer;		public class TogglePlayButtonController extends AbstractToggleButtonController {		public static const NAME:String 	 = "play";		public static const DEFAULTS:Object = {			tooltipEnabled: false,			tooltipLabel: "Play",			visible: true,			enabled: true		};				public static const DOWN_NAME:String = "pause";		public static const DOWN_DEFAULTS:Object = {			tooltipEnabled: false,			tooltipLabel: "Pause",			visible: true,			enabled: true		};		public function TogglePlayButtonController(config:ToggleButtonConfig, player:Flowplayer, controlbar:Controlbar) {			super(config, player, controlbar);		}		// get it included in swc		override protected function get faceClass():Class {			return SkinClasses.getClass("fp.PlayButton");		}				override protected function get downFaceClass():Class {			return SkinClasses.getClass("fp.PauseButton");		}				override protected function onButtonClicked(event:ButtonEvent):void {			_player.toggle();		}				// handle state		override protected function onPlayStarted(event:ClipEvent):void {		            (_widget as ToggleButton).down = ! event.isDefaultPrevented() && _player.isPlaying();        }        override protected function onPlayPaused(event:ClipEvent):void {            (_widget as ToggleButton).down = false;        }                override protected function onPlayResumed(event:ClipEvent):void {            (_widget as ToggleButton).down = true;		}				override protected function onPlayStopped(event:ClipEvent):void {            (_widget as ToggleButton).down = false;        }	}}